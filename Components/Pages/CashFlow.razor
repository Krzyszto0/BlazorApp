@page "/CashFlow"

@using BlazorApp2.Data.Incomes
@using BlazorApp2.Data
@inject AuthenticationStateProvider AuthenticationStateProvider
@inherits OwningComponentBase<IncomeService>

<PageTitle> CashFlow</PageTitle>
<section class="hero is-success is-fullheight">
    <!-- Hero head: will stick at the top -->
    <div class="hero-head">
        <header class="navbar">
            <div class="container">
                <div class="navbar-brand">
                    <a class="navbar-item" href="">
                        <span class="title">WebWallet</span>
                    </a>
                </div>
                <div id="navbarMenuHeroC" class="navbar-menu">
                    <div class="navbar-end">
                        <a class="navbar-item" href="CashFlow">
                            Przepływ pieniędzy
                        </a>
                        <span class="navbar-item">
                            <button class="button is-success is-inverted" @onclick="(()=> {Purchase.show();})">
                                <span class="icon">
                                    <svg xmlns="http://www.w3.org/2000/svg" height="16" width="16" viewBox="0 0 512 512"><!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2023 Fonticons, Inc.--><path fill="#24d160" d="M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM232 344V280H168c-13.3 0-24-10.7-24-24s10.7-24 24-24h64V168c0-13.3 10.7-24 24-24s24 10.7 24 24v64h64c13.3 0 24 10.7 24 24s-10.7 24-24 24H280v64c0 13.3-10.7 24-24 24s-24-10.7-24-24z" /></svg>
                                </span>
                                <span>Dodaj wpis</span>
                            </button>
                            <AddPurchase @ref="Purchase"></AddPurchase>
                        </span>
                    </div>
                </div>
            </div>
        </header>
    </div>

    <!-- Hero content: will be in the middle -->
    <div class="hero-body">
        <div class="container box is-fullwidth">
            <h1 class="Title has-text-centered">Wpisy</h1>
            @if(Incomes == null)
            {
                <p class="title">Nothings here</p>
            }
            else
            {
                <table class="table is-fullwidth">
                    <thead class="is-primary">
                        <tr>
                            <th><i class="fas fa-user"></i></th>
                            <td>Nazwa Konta</td>
                            <td>Kwota</td>
                            <td>Data</td>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach(var Income in Incomes)
                        {
                            <tr>
                                <td>@Income.Id</td>
                                <td>@Income.Account</td>
                                <td>@Income.Amount</td>
                                <td>@Income.Data</td>
                                <td>
                                    <button class="button is-success" @onclick="(() => {Purchase.Edit(Income);})">Edit</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <span>
                    <button class="button is-success" @onclick="(() => {Purchase.show();})">Add</button>
                </span>
            }
        </div>
    </div>
</section>

@code {
    private AddPurchase Purchase;

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    List<Income> Incomes;

    protected override async Task OnInitializedAsync()
    {
        var user = (await authenticationStateTask).User;
        Incomes = await Service.GetIncomesAsync(user.Identity.Name);
    }
}
