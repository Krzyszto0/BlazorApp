@using BlazorApp2.Components.Account.Pages
@using BlazorApp2.Data.Incomes
@using BlazorApp2.Data.Outcomes
@using BlazorApp2.Data
@inject AuthenticationStateProvider AuthenticationStateProvider
@inherits OwningComponentBase<OutcomeService>

<h3>AddExpenses</h3>

@code {
    private bool display;
    public List<Outcome> Outcomes;
    Outcome objoutcome = new Outcome();
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    public void show()
    {
        this.display = true;
    }

    protected override async Task OnInitializedAsync()
    {
        var user = (await authenticationStateTask).User;
        Outcomes = await Service.GetOutcomesAsync(user.Identity.Name);
    }

    async Task SaveOutcome()
    {
        this.display = false;
        var user = (await authenticationStateTask).User;
        if (objoutcome.Id == 0)
        {
            Outcome objNewoutcome = new Outcome();
            objNewoutcome.Data = System.DateTime.Now;
            objNewoutcome.Account = objoutcome.Account;
            objNewoutcome.Amount = objoutcome.Amount;
            objNewoutcome.UserName = user.Identity.Name;
            var result = Service.CreateOutcomeAsync(objNewoutcome);
            StateHasChanged();
        }
        else
        {
            var result = Service.UpdateOutcomeAsync(objoutcome);
        }
        Outcomes = await Service.GetOutcomesAsync(user.Identity.Name);
    }
}
